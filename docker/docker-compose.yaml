version: "3.8"
services:
  fastapi:
    restart: unless-stopped
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: "fastapi"
    ports:
      - "${APP_PORT}:8080"
    volumes:
      - ..:/code
    depends_on:
      - mongo
      - kafka
    entrypoint: /code/scripts/entrypoint.sh

    env_file:
<<<<<<< Updated upstream:docker-compose.yaml
      - .env
=======
      - ../.env
    networks:
      - fastapi_kafka
>>>>>>> Stashed changes:docker/docker-compose.yaml

  mongo:
    image: mongo:latest
    ports:
      - "${MONGO_PORT}:27017"
    env_file:
      - ../.env
    volumes:
      - ./data:/data/db
<<<<<<< Updated upstream:docker-compose.yaml
=======
    networks:
      - fastapi_kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    env_file:
      - ../.env
    expose:
      - ${ZOOKEEPER_PORT}
    ports:
      - ${ZOOKEEPER_PORT}:${ZOOKEEPER_PORT}
    networks:
      - fastapi_kafka
>>>>>>> Stashed changes:docker/docker-compose.yaml

  kafka:
    image: bitnami/kafka
    ports:
<<<<<<< Updated upstream:docker-compose.yaml
      - "${KAFKA_PORT}:9092"
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=${KAFKA_ADVERTISED_HOST_NAME}
      - KAFKA_CREATE_TOPICS=${KAFKA_CREATE_TOPICS}
      - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT}
      - ALLOW_PLAINTEXT_LISTENER=${ALLOW_PLAINTEXT_LISTENER}
=======
      - ${KAFKA_PORTS}:${KAFKA_PORTS}
    env_file:
      - ../.env
    depends_on:
      - zookeeper
    networks:
      - fastapi_kafka
>>>>>>> Stashed changes:docker/docker-compose.yaml

  celery:
    restart: unless-stopped
    image: "fastapi"
    entrypoint: /code/scripts/entrypoint_celery.sh
    volumes:
      - ..:/code
    env_file:
      - ../.env
    depends_on:
      - fastapi
      - redis

  celery-beat:
    restart: unless-stopped
    image: 'fastapi'
    entrypoint: /code/scripts/entrypoint_beat.sh
    volumes:
      - ..:/code
    env_file:
      - ../.env
    depends_on:
      - fastapi
      - redis
      - celery

  redis:
    image: redis:alpine
    command: redis-server --port ${REDIS_PORT}

    ports:
      - "${REDIS_PORT}:7777"

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "${ZOOKEEPER_PORT}:2181"
